function Parser(a){return this.grammar=a,this}function findInDfa(a,b){for(var c=a.length;c--;)if(a[c][0]===b[0]&&a[c][1]===b[1])return!0;return!1}function makeParser(a,b){void 0===b&&(b="file_input");var c=new Parser(Sk.ParseTables);"file_input"===b?c.setup(Sk.ParseTables.sym.file_input):goog.asserts.fail("todo;");var e=1,f=0,g="",h=Sk.Tokenizer.Tokens.T_COMMENT,i=Sk.Tokenizer.Tokens.T_NL,j=Sk.Tokenizer.Tokens.T_OP,k=new Sk.Tokenizer(a,"single_input"===b,function(a,b,d,k,l){return d[0],d[1],a===h||a===i?(g+=b,e=k[0],f=k[1],"\n"===b[b.length-1]&&(e+=1,f=0),void 0):(a===j&&(a=Sk.OpMap[b]),c.addtoken(a,b,[d,k,l])?!0:void 0)});return function(a){var b=k.generateTokens(a);if(b){if("done"!==b)throw"ParseError: incomplete input";return c.rootnode}return!1}}Parser.prototype.setup=function(a){a=a||this.grammar.start;var b={type:a,value:null,context:null,children:[]},c={dfa:this.grammar.dfas[a],state:0,node:b};this.stack=[c],this.used_names={}},Parser.prototype.addtoken=function(a,b,c){var d=this.classify(a,b,c);a:for(;;){for(var e=this.stack[this.stack.length-1],f=e.dfa[0],g=e.dfa[1],h=f[e.state],i=0;h.length>i;++i){var j=h[i][0],k=h[i][1],l=this.grammar.labels[j][0];if(this.grammar.labels[j][1],d===j){goog.asserts.assert(256>l),this.shift(a,b,k,c);for(var n=k;1===f[n].length&&0===f[n][0][0]&&f[n][0][1]===n;){if(this.pop(),0===this.stack.length)return!0;e=this.stack[this.stack.length-1],n=e.state,f=e.dfa[0],g=e.dfa[1]}return!1}if(l>=256){var o=this.grammar.dfas[l],p=o[1];if(p.hasOwnProperty(d)){this.push(l,this.grammar.dfas[l],k,c);continue a}}}if(!findInDfa(h,[0,e.state])){var q=c[0][0];throw new Sk.builtin.ParseError("bad input on line","parser.js",q,0,"")}if(this.pop(),0===this.stack.length)throw new Sk.builtin.ParseError("too much input")}},Parser.prototype.classify=function(a,b,c){var d;if(a===Sk.Tokenizer.Tokens.T_NAME&&(this.used_names[b]=!0,d=this.grammar.keywords.hasOwnProperty(b)&&this.grammar.keywords[b]))return d;if(d=this.grammar.tokens.hasOwnProperty(a)&&this.grammar.tokens[a],!d)throw new Sk.builtin.ParseError("bad token",a,b,c);return d},Parser.prototype.shift=function(a,b,c,d){var e=this.stack[this.stack.length-1].dfa;this.stack[this.stack.length-1].state;var g=this.stack[this.stack.length-1].node,h={type:a,value:b,lineno:d[0][0],col_offset:d[0][1],children:null};h&&g.children.push(h),this.stack[this.stack.length-1]={dfa:e,state:c,node:g}},Parser.prototype.push=function(a,b,c,d){var e=this.stack[this.stack.length-1].dfa,f=this.stack[this.stack.length-1].node,g={type:a,value:null,lineno:d[0][0],col_offset:d[0][1],children:[]};this.stack[this.stack.length-1]={dfa:e,state:c,node:f},this.stack.push({dfa:b,state:0,node:g})},Parser.prototype.pop=function(){var a=this.stack.pop(),b=a.node;if(b)if(0!==this.stack.length){var c=this.stack[this.stack.length-1].node;c.children.push(b)}else this.rootnode=b,this.rootnode.used_names=this.used_names},Sk.parse=function(a,b){var c=makeParser(a);"\n"!==b.substr(b.length-1,1)&&(b+="\n");for(var e,d=b.split("\n"),f=0;d.length>f;++f)e=c(d[f]+(f===d.length-1?"":"\n"));return e},Sk.parseTreeDump=function(a,b){b=b||"";var c="";if(c+=b,a.type>=256){c+=Sk.ParseTables.number2symbol[a.type]+"\n";for(var d=0;a.children.length>d;++d)c+=Sk.parseTreeDump(a.children[d],b+"  ")}else c+=Sk.Tokenizer.tokenNames[a.type]+": "+new Sk.builtin.str(a.value).$r().v+"\n";return c},goog.exportSymbol("Sk.parse",Sk.parse),goog.exportSymbol("Sk.parseTreeDump",Sk.parseTreeDump);